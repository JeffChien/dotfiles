#+title: Readme
* Table of content :TOC:
- [[#application][Application]]
- [[#custom-configs][Custom configs]]
  - [[#defaultcustomyaml][default.custom.yaml]]
  - [[#input-methods][Input methods]]
  - [[#archive][Archive]]
  - [[#helpful-documents][Helpful documents]]
- [[#gnu-stow][Gnu stow]]
  - [[#macos][MacOS]]
  - [[#linux][Linux]]
- [[#tagging][Tagging]]

* Application

Use [[https://github.com/rime/plum][東風破]] to install other input methods.

* Custom configs
:PROPERTIES:
:header-args: :mkdirp yes
:END:

#+NAME: variables
| Variable | Value   | Description           |
|----------+---------+-----------------------|
| basedir  | .build/ | dotfile target folder |

** default.custom.yaml

#+begin_src yaml :tangle (org-sbe helper.org.resolve-path (path $"default.custom.yaml"))
patch:
  schema_list:
    - schema: bopomofo_tw
    - schema: luna_pinyin_tw
    - schema: double_pinyin_flypy
    - schema: newcj
  menu:
    page_size: 6
  key_binder:
    bindings:
    # movement
    ## emacs style
    - { when: composing, accept: Control+p, send: Up }
    - { when: composing, accept: Control+n, send: Down }
    - { when: composing, accept: Control+b, send: KP_Left }
    - { when: composing, accept: Control+f, send: Right }
    - { when: composing, accept: Alt+b, send: Left }
    - { when: composing, accept: Alt+f, send: Shift+Right }
    - { when: composing, accept: Control+a, send: Home }
    - { when: composing, accept: Control+e, send: End }
    - { when: composing, accept: Control+d, send: Delete }
    - { when: composing, accept: Control+k, send: Shift+Delete }
    - { when: composing, accept: Control+h, send: BackSpace }
    - { when: composing, accept: Alt+BackSpace, send: Shift+BackSpace } # delete a word
    - { when: composing, accept: Control+g, send: Escape }
    ## paging
    - { when: has_menu, accept: Tab, send: Down }
    - { when: has_menu, accept: Shift+Tab, send: Up }

#+end_src

** Input methods

*** bopomofo_tw.custom.yaml
#+begin_src yaml :tangle (org-sbe helper.org.resolve-path (path $"bopomofo_tw.custom.yaml"))
patch:
  menu:
    alternative_select_keys: "SDFWER"
  translator/spelling_hints: 4  # 詞中最多有幾個字才顯示拼音提示
#+end_src

*** double_pinyin_flypy.custom.yaml

小鶴雙拼注音反查
#+begin_src yaml :tangle (org-sbe helper.org.resolve-path (path $"double_pinyin_flypy.custom.yaml"))
patch:
  schema/dependencies:
    - bopomofo

  switches:
    - name: ascii_mode
      reset: 0
      states: [ 中文, 西文 ]
    - name: full_shape
      states: [ 半角, 全角 ]
    - name: ascii_punct
      states: [ 。，, ．， ]
    - name: zh_hant_tw
      reset: 1

  engine/filters:
    - simplifier@zh_hant_tw
    - uniquifier
    - reverse_lookup_filter@reverse_lookup_flypy

  engine/segmentors:
    - ascii_segmentor
    - matcher
    - abc_segmentor
    - affix_segmentor@reverse_lookup
    - punct_segmentor
    - fallback_segmentor

  engine/translators:
    - punct_translator
    - script_translator
    - script_translator@reverse_lookup

  zh_hant_tw:
    option_name: zh_hant_tw
    opencc_config: t2tw.json
    tips: none

  reverse_lookup:
    tag: reverse_lookup
    dictionary: terra_pinyin
    enable_completion: true
    prism: bopomofo
    prefix: "`"
    suffix: "'"
    tips: 〔注音〕
    preedit_format:
      - "xlit|1qaz2wsxedcrfv5tgbyhnujm8ik,9ol.0p;/- 6347'|ㄅㄆㄇㄈㄉㄊㄋㄌㄍㄎㄏㄐㄑㄒㄓㄔㄕㄖㄗㄘㄙㄧㄨㄩㄚㄛㄜㄝㄞㄟㄠㄡㄢㄣㄤㄥㄦˉˊˇˋ˙ |"

  reverse_lookup_flypy:
    tags: [reverse_lookup]
    overwrite_comment: true
    dictionary: luna_pinyin
    comment_format:
    - xform/iu/Q/
    - xform/ei/W/
    - xform/uan/R/
    - xform/[uv]e/T/
    - xform/un/Y/
    - xform/sh/U/
    - xform/ch/I/
    - xform/zh/V/
    - xform/uo/O/
    - xform/ie/P/
    - xform/i?ong/S/
    - xform/ing|uai/K/
    - xform/ai/D/
    - xform/eng/G/
    - xform/en/F/
    - xform/[iu]ang/L/
    - xform/ang/H/
    - xform/ian/M/
    - xform/an/J/
    - xform/ou/Z/
    - xform/iao/N/
    - xform/[iu]a/X/
    - xform/ao/C/
    - xform/ui/V/
    - xform/in/B/
    - xlit/QWRTYUIOPSDFGHJKLZXCVBNM/qwrtyuiopsdfghjklzxcvbnm/

  recognizer/patterns/reverse_lookup: "`[-,.;/a-z0-9]*'?$"

  editor/bindings:
    # space: commit_composition #使用 fluency_editor 時開啟
    Return: confirm #使用 express_editor 時開啟
    KP_Enter: confirm #使用 express_editor 時開啟
    Shift+Return: commit_script_text # 輸入變換後上屏
#+end_src

**** Limitations
I would like to enable ~spelling_hints~ for phrase reverse lookup, but it is not support yet, only the first character will apply the filter rules. [[https://github.com/rime/home/issues/298][issue]]

*** array30

https://github.com/rime/rime-array
I really like the rules but like many people has said, it is not ergonomic, use pinky fingers quite often and some common characters have to tap with the same finger multiple times in the same column.


*** newcj (大新倉頡)
https://github.com/Joey-Li/Newcj_rime

#+begin_src yaml :tangle (org-sbe helper.org.resolve-path (path $"newcj.schema.yaml"))
# Rime schema settings
# encoding: utf-8
# 自由大新倉頡

schema:
  schema_id: newcj
  name: 自由大新倉頡
  version: "0.0.1"
  author:
    - 自由大新倉頡
  description: |
    自由大新倉頡
  dependencies:
    - bopomofo

switches:
  - name: ascii_mode
    reset: 0
    states: [ 中文, 西文 ]
  - name: full_shape
    states: [ 半角, 全角 ]
  - name: simplification
    states: [ 漢字, 汉字 ]
  - name: extended_charset
    states: [ 常用, 增廣 ]
  - name: ascii_punct
    states: [ 。，, ．， ]

engine:
  processors:
    - ascii_composer
    - recognizer
    - key_binder
    - speller
    - punctuator
    - selector
    - navigator
    - express_editor
  segmentors:
    - ascii_segmentor
    - matcher
    - abc_segmentor
    - affix_segmentor@method_bopomofo
    - affix_segmentor@lookup_bopomofo
    - punct_segmentor
    - fallback_segmentor
  translators:
    - punct_translator
    - script_translator@method_bopomofo
    - table_translator@lookup_bopomofo
    - table_translator
  filters:
    - simplifier
    - uniquifier
    - reverse_lookup_filter@reverse_lookup_newcj
    - reverse_lookup_filter@reverse_lookup_bopomofo
    - single_char_filter

speller:
  alphabet: zyxwvutsrqponmlkjihgfedcba;
  delimiter: " '"
  auto_select: true
  max_code_length: 4

translator:
  dictionary: newcj
  enable_charset_filter: true
  enable_sentence: true
  enable_encoder: true
  encode_commit_history: true
  max_phrase_length: 5
  preedit_format:
    - 'xlit|;|；'
    - 'xform/^([a-z；]*)$/$1\t（\U$1\E）/'
    - "xlit|ABCDEFGHIJKLMNOPQRSTUVWXYZ；|日月金木水火土竹戈十大中一弓人心手口尸廿山女田難卜言；|"
  comment_format:
    - "xlit|abcdefghijklmnopqrstuvwxyz;~|日月金木水火土竹戈十大中一弓人心手口尸廿山女田難卜言；～|"
  disable_user_dict_for_patterns:
    - "^z.*$"
    - "^yyy.*$"

lookup_bopomofo:
  __include: /translator
  tag: lookup_bopomofo
  prefix: "`2"
  suffix: "'"
  tips: 〔反查讀音〕

method_bopomofo:
  tag: method_bopomofo
  dictionary: terra_pinyin
  enable_completion: true
  prism: bopomofo
  prefix: "`1"
  suffix: "'"
  tips: 〔注音〕
  preedit_format:
    - "xlit|1qaz2wsxedcrfv5tgbyhnujm8ik,9ol.0p;/- 6347'|ㄅㄆㄇㄈㄉㄊㄋㄌㄍㄎㄏㄐㄑㄒㄓㄔㄕㄖㄗㄘㄙㄧㄨㄩㄚㄛㄜㄝㄞㄟㄠㄡㄢㄣㄤㄥㄦˉˊˇˋ˙ |"

reverse_lookup_newcj:
  tags: [method_bopomofo]
  overwrite_comment: yes
  dictionary: newcj
  comment_format:
    - 'xform/([a-z;]+)/【$1】/'
    - "xlit|abcdefghijklmnopqrstuvwxyz;~|日月金木水火土竹戈十大中一弓人心手口尸廿山女田難卜言；～|"

reverse_lookup_bopomofo:
  tags: [lookup_bopomofo]
  dictionary: terra_pinyin
  overwrite_comment: true  # 覆蓋其他提示
  comment_format:
    - "xform/e?r5$/er5/"
    - "xform/iu/iou/"
    - "xform/ui/uei/"
    - "xform/ong/ung/"
    - "xform/yi?/i/"
    - "xform/wu?/u/"
    - "xform/iu/v/"
    - "xform/([jqx])u/$1v/"
    - "xform/([iuv])n/$1en/"
    - "xform/zh/Z/"
    - "xform/ch/C/"
    - "xform/sh/S/"
    - "xform/ai/A/"
    - "xform/ei/I/"
    - "xform/ao/O/"
    - "xform/ou/U/"
    - "xform/ang/K/"
    - "xform/eng/G/"
    - "xform/an/M/"
    - "xform/en/N/"
    - "xform/er/R/"
    - "xform/eh/E/"
    - "xform/([iv])e/$1E/"
    - "xform/1//"
    - "xlit|bpmfdtnlgkhjqxZCSrzcsiuvaoeEAIOUMNKGR2345|ㄅㄆㄇㄈㄉㄊㄋㄌㄍㄎㄏㄐㄑㄒㄓㄔㄕㄖㄗㄘㄙㄧㄨㄩㄚㄛㄜㄝㄞㄟㄠㄡㄢㄣㄤㄥㄦˊˇˋ˙|"
    - "xform/ /} {/"
    - "xform/^/ {"
    - "xform/$/}/"

simplifier:
  tips: all

punctuator:
  import_preset: symbols

key_binder:
  import_preset: default

recognizer:
  import_preset: default
  patterns:
    punct: '^/([0-9]0?|[A-Za-z]+)$'
    method_bopomofo: "`1[-,.;/a-z0-9]*'?$"
    lookup_bopomofo: "`2[;a-z0-9]*'?$"
#+end_src

** Archive
*** Dvorak mapping
I'm sick of having dealing with different keyboard layouts everytime I install a new application.
these are settings I used for bopomofo in dvorak layout

#+begin_src yaml
patch:
  schema/name: bopomofo (dvorak)
  speller/alphabet: "1'a;2,oq.ejpuk5yixfdbghm8ctw9rnv0lsz[ 6347"
  speller/initials: "1'a;2,oq.ejpuk5yixfdbghm8ctw9rnv0lsz["
  speller/algebra/@last: "xlit|bpmfdtnlgkhjqxZCSrzcsiuvaoeEAIOUMNKGR12345|1'a;2,oq.ejpuk5yixfdbghm8ctw9rnv0lsz[ 6347|"
  translator/preedit_format/@0: "xlit|1'a;2,oq.ejpuk5yixfdbghm8ctw9rnv0lsz[ 6347'|ㄅㄆㄇㄈㄉㄊㄋㄌㄍㄎㄏㄐㄑㄒㄓㄔㄕㄖㄗㄘㄙㄧㄨㄩㄚㄛㄜㄝㄞㄟㄠㄡㄢㄣㄤㄥㄦˉˊˇˋ˙ |"
  all_bpm/preedit_format/@0: "xlit|1'a;2,oq.ejpuk5yixfdbghm8ctw9rnv0lsz[ 6347'|ㄅㄆㄇㄈㄉㄊㄋㄌㄍㄎㄏㄐㄑㄒㄓㄔㄕㄖㄗㄘㄙㄧㄨㄩㄚㄛㄜㄝㄞㄟㄠㄡㄢㄣㄤㄥㄦˉˊˇˋ˙ |"
  menu/alternative_select_keys: "UHETON"
#+end_src
** Helpful documents
[[https://github.com/rime/home/wiki/RimeWithSchemata][Basic guide]]
[[https://github.com/LEOYoon-Tsaw/Rime_collections/blob/master/Rime_description.md][Schema.yaml definition]]
[[https://github.com/rime/home/wiki/Configuration][How to write patch file]]
[[https://github.com/rime/home/wiki][wiki]]
[[https://www.educative.io/blog/advanced-yaml-syntax-cheatsheet][Anchor and alias in yaml]]

* Gnu stow
#+begin_src pattern :tangle .stow-local-ignore
#+end_src

** MacOS

Install dotfile
#+begin_src sh :results silent
stow -v1 -t ~/Library/Rime .build
#+end_src

Uninstall dotfile
#+begin_src sh :results silent
stow -t ~/Library/Rime -D .build
#+end_src

** Linux
*** ibus

Install dotfile
#+begin_src sh :results silent
stow -v1 -t ~/.config/ibus/rime .build
#+end_src

Uninstall dotfile
#+begin_src sh :results silent
stow -t ~/.config/ibus/rime -D .build
#+end_src

*** fcitx

Install dotfile
#+begin_src sh :results silent
stow -v1 -t ~/.local/share/fcitx5/rime .build
#+end_src

Uninstall dotfile
#+begin_src sh :results silent
stow -t ~/.local/share/fcitx5/rime -D .build
#+end_src

* Tagging
#+begin_src tag :tangle TAGS
linux
darwin
#+end_src
