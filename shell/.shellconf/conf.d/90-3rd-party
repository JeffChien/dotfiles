#!/usr/bin/env bash

# nvm: manage multiple version of nodejs {{{
need_node () {
    NVM_HOME="$HOME/.nvm"
    NVM_MAIN="$NVM_HOME/nvm.sh"
    NVM_COMPLETION="$NVM_HOME/bash_completion"

    [[ -s "$NVM_MAIN" ]] && source "$NVM_MAIN"
    [[ -s "$NVM_COMPLETION" ]] && source "$NVM_COMPLETION"

    # setting up global node_module path
    NODE_CURVER_HOME=`which node | sed s#/bin/node##g`
    export NODE_PATH="$NODE_PATH:$NODE_CURVER_HOME/lib/node_modules"
}
# }}}


#rvm: ruby vm {{{
need_ruby () {
    RVM_HOME="$HOME/.rvm"
    RVM_MAIN="$HOME/.rvm/scripts/rvm"
    [[ -s "$RVM_MAIN" ]] && source "$RVM_MAIN"
}
#}}}

#scm-breeze: better cli interface for scm  {{{
SCM_HOME="$HOME/.scm_breeze"
SCM_MAIN="$SCM_HOME/scm_breeze.sh"

[[ -s "$SCM_MAIN" ]] && source "$SCM_MAIN"
#}}}

#pyenv: mange multiple version of python {{{
need_python() {
    export PYENV_ROOT="$HOME/.pyenv"
    PYENV_COMPLETION_ZSH="$PYENV_ROOT/completions/pyenv.zsh"
    PYENV_COMPLETION_BASH="$PYENV_ROOT/completions/pyenv.bash"
    eval "$(pyenv init -)"
    case "$SHELL" in
        *zsh*) source "$PYENV_COMPLETION_ZSH";;
    *bash*) source "$PYENV_COMPLETION_BASH";;
esac
}
# }}}

#tmuxinator: manage tmux session {{{
TMUXINATOR_HOME="$HOME/.tmuxinator"
TMUXINATOR_MAIN="$HOME/.tmuxinator/scripts/tmuxinator"

[[ -s "$TMUXINATOR_MAIN" ]] && source "$TMUXINATOR_MAIN"
#}}}

#gvm: go-lang vm {{{
need_golang () {
    GVM_HOME="$HOME/.gvm"
    GVM_MAIN="$GVM_HOME/scripts/gvm"
    [[ -s "$GVM_MAIN" ]] && source "$GVM_MAIN"
}
# }}}
